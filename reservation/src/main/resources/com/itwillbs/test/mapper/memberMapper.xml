<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.itwillbs.test.mapper.MemberMapper">
	<!-- 개인회원 정보 등록 -->
	<insert id="insertMember">
		INSERT 
			INTO members
			VALUES (
				NULL
				, #{m_id}
				, #{m_passwd} 
				, #{m_name}
				, #{m_nick} 
				, #{m_birth}
				, #{m_tel}
				, #{m_email}
				, 1
				, now()
				, 1 -- userType 일반회원, 기업회원 구분
			)
	</insert>
	<!-- 개인회원 정보 등록 끝 -->
	
	<!-- 회원 랜덤 비밀번호 발급 -->
	<update id="updatePassword">
		UPDATE members 
			SET m_passwd = #{m_passwd} 
			WHERE m_id = #{m_id} AND m_name = #{m_name}
	</update>
	
	<!-- 맴버 정보 수정 폼 접근 시 비밀번호 재확인 -->
	<select id="isCorrectMember" resultType="com.itwillbs.test.vo.MemberVO">
		    select * 
		    	from members
		    		where m_id = #{id}
	</select>
	
	<!-- 멤버 정보 조회 -->
	<select id="selectMember" resultType="com.itwillbs.test.vo.MemberVO">
		    select * 
		    	from members
		    		where m_id = #{id}
	</select>
	
	<!-- 맴버 정보 수정 -->
	<update id="updateMember" parameterType="com.itwillbs.test.vo.MemberVO">
		update members 
			set m_name = #{m_name},
			    m_passwd = #{m_passwd},
			    m_nick = #{m_nick},
			    m_tel = #{m_tel},
			    m_email = concat(#{m_email1},'@', #{m_email2}),
			    m_passwd = #{m_passwd}
			    	where m_id = #{m_id}
	</update>
	
	<!-- 양도 게시판 로그인 세션id 구분 -->
	<select id="selectMemberInfo" resultType="com.itwillbs.test.vo.MemberVO">
	  <choose>
	    <when test="sId.matches('^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$')">
	      <!-- 이메일 형식인 경우 -->
	      SELECT m_name, m_tel, m_email
		      FROM members
		      	WHERE m_email = #{sId}
	    </when>
	    <otherwise>
	      <!-- 일반 로그인인 경우 -->
	      SELECT m_name, m_tel, m_email
		      FROM members
		      	WHERE m_id = #{sId}
	    </otherwise>
	  </choose>
	</select>
	
	<!-- 카카오 로그인 시 회원 email을 조회 후 m_id를 리턴받아 세션id에 저장 -->
	<select id="selectMemberId" resultType="com.itwillbs.test.vo.MemberVO">
		select m_id from
			members
				where m_email = #{email}
	</select>
	
	<select id="selectMemberReservation" resultType="com.itwillbs.test.vo.ReservationVO">
	SELECT r.r_idx, me.me_name, r.r_amount, r.r_tables, r.r_personnel, m.m_name, r.r_status, r.r_date, r.r_request, res.res_name, res.res_idx, r.rv_status
	FROM reservation r JOIN restaurant res
	ON r.res_idx = res.res_idx
	JOIN members m
	ON r.m_idx = m.m_idx
	JOIN menus me
	ON r.me_idx = me.me_idx
	WHERE r.m_idx = (SELECT m_idx
						FROM members 
						WHERE m_id = #{sId}
						)
	ORDER BY r.r_idx ASC
	</select>
	
	<select id="selectMemberRestaurant">
	SELECT * 
	FROM restaurant
	WHERE res_idx IN (SELECT res_idx
					FROM reservation
					WHERE m_idx=(SELECT m_idx
								FROM members
								WHERE m_id = #{sId})
					)
	</select>
	
	<!-- 비밀번호 확인 -->
	<select id="isCorrectPasswd" resultType="String">
		    SELECT m_passwd 
		    	FROM members
		    		WHERE m_id = #{id}
	</select>
	
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" resultType="com.itwillbs.test.vo.MemberVO">
		SELECT *
			FROM members
				ORDER BY m_idx
	</select>
	
	<!-- 회원 정보 삭제 --> 
	<delete id="deleteMember">
		DELETE FROM members
			WHERE m_id = #{m_id}	
	</delete>
	
	<!-- 회원 정지 상태로 설정-->
	<update id="updateMemberStatus">
		UPDATE members
			SET m_status = 3
			WHERE m_idx = #{m_idx}
	</update>
	
	<!-- 관리자의 회원 정보 수정 -->
	<update id="adminUpdateMember">
		UPDATE members
			SET m_idx = #{m_idx}
			   ,m_id = #{m_id}
			   ,m_name = #{m_name}
			   ,m_tel = #{m_tel}
			   ,m_email = #{m_email}
			   ,m_status = #{m_status}
			   ,userType = #{userType}
				WHERE m_idx = #{m_idx}
	</update>
	
	<insert id="insertReview">
		INSERT INTO
			reviews
				VALUES
					(
					null
					, #{rv_scope}
					, #{rv_comment}
					, #{rv_img}
					, #{r_idx}
					);
	</insert>
	
	<update id="updateRvStatus">
		UPDATE reservation
			SET rv_status = 1
			WHERE r_idx = #{r_idx}
	</update>
	
	<select id="selectReviewList">
		SELECT *
			FROM reviews
			WHERE r_idx IN (SELECT r_idx
							FROM reservation
							WHERE m_idx = (SELECT m_idx
											FROM members
											WHERE m_id = #{sId})
							)
	</select>
</mapper>